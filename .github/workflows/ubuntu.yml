name: ubuntu-dist
on:
  push:
    branches: [ main ]
    paths:
      - '.github/workflows/ubuntu.yml'
      - '!ubuntu/**'
  workflow_dispatch:
  repository_dispatch:
    types: ubuntu-build

jobs:
  build:
    name: Building ubuntu docker images
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        dist:
          - {
              name: ubuntu-bionic,
              os: ubuntu,
              # 18.04
              symbol: bionic,
              platforms: "linux/amd64,linux/arm64/v8,linux/arm/v7"
            }
          - {
              name: ubuntu-focal,
              os: ubuntu,
              # 20.04
              symbol: focal,
              platforms: "linux/amd64,linux/arm64/v8,linux/arm/v7"
            }
          - {
              name: ubuntu-jammy,
              os: ubuntu,
              # 22.04
              symbol: jammy,
              platforms: "linux/amd64,linux/arm64/v8,linux/arm/v7"
            }
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Prepare
        id: prepare
        run: |
          DIST_NAME=${{ matrix.dist.name }}
          USER_NAME=flameshotorg
          REPO_NAME=ci-building-images
          IMAGE_NAME=${{ matrix.dist.os }}/${{ matrix.dist.symbol }}
          TAGS="${USER_NAME}/${REPO_NAME}:${DIST_NAME}"
          echo ::set-output name=build_args::VERSION=${DIST_NAME}
          echo ::set-output name=image-name::${IMAGE_NAME}
          echo ::set-output name=tags::${TAGS}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      - name: Build
        uses: docker/build-push-action@v2
        with:
          context: ./${{ steps.prepare.outputs.image-name }}
          file: ./${{ steps.prepare.outputs.image-name }}/Dockerfile
          platforms: ${{ matrix.dist.platforms }}
          push: ${{ github.event_name != 'pull_request' }}
          build-args: ${{ steps.prepare.outputs.build_args }}
          tags: ${{ steps.prepare.outputs.tags }}
      - name: Clear
        if: always()
        run: |
          rm -rf ${HOME}/.docker/config.json